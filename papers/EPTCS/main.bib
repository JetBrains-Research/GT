@article{Staged,
 author = {Yallop, Jeremy},
 title = {Staged Generic Programming},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {September 2017},
 volume = {1},
 number = {ICFP},
 month = aug,
 year = {2017},
 issn = {2475-1421},
 pages = {29:1--29:29},
 articleno = {29},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/3110273},
 doi = {10.1145/3110273},
 acmid = {3110273},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {generic programming, metaprogramming, multi-stage programming, partial evaluation},
} 

@article{Visitors,
 author = {Pottier, Fran\c{c}ois},
 title = {Visitors Unchained},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {September 2017},
 volume = {1},
 number = {ICFP},
 month = aug,
 year = {2017},
 issn = {2475-1421},
 pages = {28:1--28:28},
 articleno = {28},
 numpages = {28},
 url = {http://doi.acm.org/10.1145/3110272},
 doi = {10.1145/3110272},
 acmid = {3110272},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract syntax trees, binding constructs, boilerplate, names, traversals},
} 

@Inproceedings{GenericOCaml,
  author    = {Balestrieri, Florent and Mauny, Michel},
  year      = {2018},
  title     = {Generic Programming in OCaml},
  editor    = {Asai, Kenichi and Shinwell, Mark},
  booktitle = {{\rm Proceedings}
               ML Family Workshop / OCaml Users and Developers workshops,
               {\rm Nara, Japan, September 22-23, 2016}},
  series    = {Electronic Proceedings in Theoretical Computer Science},
  volume    = {285},
  publisher = {Open Publishing Association},
  pages     = {59-100},
  doi       = {10.4204/EPTCS.285.3},
}

@inproceedings{Yallop,
 author = {Yallop, Jeremy},
 title = {Practical Generic Programming in OCaml},
 booktitle = {Proceedings of the 2007 Workshop on Workshop on ML},
 series = {ML '07},
 year = {2007},
 isbn = {978-1-59593-676-9},
 location = {Freiburg, Germany},
 pages = {83--94},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1292535.1292548},
 doi = {10.1145/1292535.1292548},
 acmid = {1292548},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {OCaml, deriving, generic programming},
}

@INPROCEEDINGS{PolyVar,
    author = {Jacques Garrigue},
    title = {Programming with Polymorphic Variants},
    booktitle = {Workshop on ML},
    year = {1998}
}

@INPROCEEDINGS{PolyVarReuse,
    author = {Jacques Garrigue},
    title = {Code reuse through polymorphic variants},
    booktitle = {In Workshop on Foundations of Software Engineering},
    year = {2000}
}

@InProceedings{OCamlRemy,
author="R{\'e}my, Didier",
editor="Barthe, Gilles
and Dybjer, Peter
and Pinto, Lu{\'i}s
and Saraiva, Jo{\~a}o",
title="Using, Understanding, and Unraveling the OCaml Language From Practice to Theory and Vice Versa",
booktitle="Applied Semantics",
year="2002",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="413--536",
abstract="These course notes are addressed to a wide audience of people interested in modern programming languages in general, ML-like languages in particular, or simply in OCaml, whether they are programmers or language designers, beginners or knowledgeable readers ---little pre-requiresite is actually assumed.",
isbn="978-3-540-45699-5"
}

@INPROCEEDINGS{Bananas,
    author = {Erik Meijer and Maarten Fokkinga and Ross Paterson},
    title = {Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire},
    booktitle = {},
    year = {1991},
    pages = {124--144},
    publisher = {Springer-Verlag}
}

@Article{AGKnuth,
author="Knuth, Donald E.",
title="Semantics of context-free languages",
journal="Mathematical systems theory",
year="1968",
month="Jun",
day="01",
volume="2",
number="2",
pages="127--145",
abstract="``Meaning'' may be assigned to a string in a context-free language by defining ``attributes'' of the symbols in a derivation tree for that string. The attributes can be defined by functions associated with each production in the grammar. This paper examines the implications of this process when some of the attributes are ``synthesized'', i.e., defined solely in terms of attributes of thedescendants of the corresponding nonterminal symbol, while other attributes are ``inherited'', i.e., defined in terms of attributes of theancestors of the nonterminal symbol. An algorithm is given which detects when such semantic rules could possibly lead to circular definition of some attributes. An example is given of a simple programming language defined with both inherited and synthesized attributes, and the method of definition is compared to other techniques for formal specification of semantics which have appeared in the literature.",
issn="1433-0490",
doi="10.1007/BF01692511",
url="https://doi.org/10.1007/BF01692511"
}

@inproceedings{AGSwierstra,
 author = {Viera, Marcos and Swierstra, S. Doaitse and Swierstra, Wouter},
 title = {Attribute Grammars Fly First-class: How to Do Aspect Oriented Programming in Haskell},
 booktitle = {Proceedings of the 14th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '09},
 year = {2009},
 isbn = {978-1-60558-332-7},
 location = {Edinburgh, Scotland},
 pages = {245--256},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1596550.1596586},
 doi = {10.1145/1596550.1596586},
 acmid = {1596586},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {HList, Haskell, attribute grammars, class system, lazy evaluation, type-level programming},
} 

@inproceedings{DGP,
 author = {Gibbons, Jeremy},
 title = {Datatype-generic Programming},
 booktitle = {Proceedings of the 2006 International Conference on Datatype-generic Programming},
 series = {SSDGP'06},
 year = {2007},
 isbn = {3-540-76785-1, 978-3-540-76785-5},
 location = {Nottingham, UK},
 pages = {1--71},
 numpages = {71},
 url = {http://dl.acm.org/citation.cfm?id=1782894.1782895},
 acmid = {1782895},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@article{ALaCarte,
 author = {Swierstra, Wouter},
 title = {Data Types \`{a} La Carte},
 journal = {J. Funct. Program.},
 issue_date = {July 2008},
 volume = {18},
 number = {4},
 month = jul,
 year = {2008},
 issn = {0956-7968},
 pages = {423--436},
 numpages = {14},
 url = {http://dx.doi.org/10.1017/S0956796808006758},
 doi = {10.1017/S0956796808006758},
 acmid = {1394795},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@incollection{Sestoft,
 author = {Sestoft, Peter},
 chapter = {Demonstrating Lambda Calculus Reduction},
 title = {The Essence of Computation},
 editor = {Mogensen, Torben \AE and Schmidt, David A. and Sudborough, I. Hal},
 year = {2002},
 isbn = {3-540-00326-6},
 pages = {420--435},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=860256.860276},
 acmid = {860276},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
}

@article{Fold,
 author = {Hutton, Graham},
 title = {A Tutorial on the Universality and Expressiveness of Fold},
 journal = {J. Funct. Program.},
 issue_date = {July 1999},
 volume = {9},
 number = {4},
 month = jul,
 year = {1999},
 issn = {0956-7968},
 pages = {355--372},
 numpages = {18},
 url = {http://dx.doi.org/10.1017/S0956796899003500},
 doi = {10.1017/S0956796899003500},
 acmid = {968579},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@other{ExpressionProblem,
author = {Wadler, Philip},
title = {The Expression Problem},
misc = {Discussion on the Java-Genericity mailing list},
month = dec,
year = {1998}
}

@article{OOHaskell,
  author    = {Oleg Kiselyov and
               Ralf L{\"{a}}mmel},
  title     = {Haskell's overlooked object system},
  journal   = {CoRR},
  volume    = {abs/cs/0509027},
  year      = {2005},
  url       = {http://arxiv.org/abs/cs/0509027},
  archivePrefix = {arXiv},
  eprint    = {cs/0509027},
  timestamp = {Mon, 13 Aug 2018 16:46:43 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-cs-0509027},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{SYB1,
 author = {L\"{a}mmel, Ralf and Jones, Simon Peyton},
 title = {Scrap More Boilerplate: Reflection, Zips, and Generalised Casts},
 booktitle = {Proceedings of the Ninth ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '04},
 year = {2004},
 isbn = {1-58113-905-5},
 location = {Snow Bird, UT, USA},
 pages = {244--255},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1016850.1016883},
 doi = {10.1145/1016850.1016883},
 acmid = {1016883},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {generic programming, reflection, type cast, zippers},
}

@article{SYB,
 author = {L\"{a}mmel, Ralf and Jones, Simon Peyton},
 title = {Scrap Your Boilerplate: A Practical Design Pattern for Generic Programming},
 journal = {SIGPLAN Not.},
 issue_date = {March 2003},
 volume = {38},
 number = {3},
 month = jan,
 year = {2003},
 issn = {0362-1340},
 pages = {26--37},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/640136.604179},
 doi = {10.1145/640136.604179},
 acmid = {604179},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {generic programming, rank-2 types, traversal, type cast},
}

@article{SYB2,
 author = {L\"{a}mmel, Ralf and Jones, Simon Peyton},
 title = {Scrap Your Boilerplate with Class: Extensible Generic Functions},
 journal = {SIGPLAN Not.},
 issue_date = {September 2005},
 volume = {40},
 number = {9},
 month = sep,
 year = {2005},
 issn = {0362-1340},
 pages = {204--215},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1090189.1086391},
 doi = {10.1145/1090189.1086391},
 acmid = {1086391},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {extensibility, generic programming, recursive dictionaries, type classes, typecase},
}

@article{SCICO,
 author = {Boulytchev, Dmitry},
 title = {Combinators and Type-driven Transformers in Objective Caml},
 journal = {Sci. Comput. Program.},
 issue_date = {December 2015},
 volume = {114},
 number = {C},
 month = dec,
 year = {2015},
 issn = {0167-6423},
 pages = {57--73},
 numpages = {17},
 url = {https://doi.org/10.1016/j.scico.2015.07.008},
 doi = {10.1016/j.scico.2015.07.008},
 acmid = {2853599},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Combinators, Compilers, Datatype-generic programming, Functional programming, Modularization and code reuse},
} 

@inproceedings{SYBOCaml,
 author = {Boulytchev, Dmitry and Mechtaev, Sergey},
 title = {Efficiently Scrapping Boilerplate Code in OCaml},
 booktitle = {Workshop on ML},
 series = {ML '11},
 year = {2011},
 location = {Tokyo, Japan},
}

@article{TransformationObjects,
  author    = {Dmitri Boulytchev},
  title     = {Code Reuse With Transformation Objects},
  journal   = {CoRR},
  volume    = {abs/1802.01930},
  year      = {2018},
  url       = {http://arxiv.org/abs/1802.01930},
  archivePrefix = {arXiv},
  eprint    = {1802.01930},
  timestamp = {Mon, 13 Aug 2018 16:46:56 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1802-01930},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{OCanren,
  author    = {Dmitry Kosarev and
               Dmitry Boulytchev},
  title     = {Typed Embedding of a Relational Language in OCaml},
  booktitle = {Proceedings {ML} Family Workshop / OCaml Users and Developers workshops,
               {ML/OCAML} 2016, Nara, Japan, September 22-23, 2016.},
  pages     = {1--22},
  year      = {2016},
  crossref  = {DBLP:journals/corr/abs-1812-10891},
  url       = {https://doi.org/10.4204/EPTCS.285.1},
  doi       = {10.4204/EPTCS.285.1},
  timestamp = {Fri, 04 Jan 2019 12:22:11 +0100},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1805-11006},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{ModularImplicits,
author = {White, Leo and Bour, Frédéric and Yallop, Jeremy},
year = {2015},
month = {12},
pages = {},
title = {Modular implicits},
volume = {198},
journal = {Electronic Proceedings in Theoretical Computer Science},
doi = {10.4204/EPTCS.198.2}
}


