true: debug, bin_annot, short_paths, annot
#, strict_sequence
<sample>: -traverse

<common/*>:  package(ppxlib)
<common/plugin.*>: package(ppxlib.metaquot)
<plugins/*>: package(ppxlib)
#<common/compare.ml> or <ext/plugin.ml>: package(ppxlib.metaquot)

<camlp5/core2.ml> or <camlp5/extension.ml> or <camlp5/Camlp5Helpers.ml>: syntax(camlp5o), package(camlp5,camlp5.gramlib), for-pack(Pa_gt), package(ppxlib)
#<camlp5/*>: package(ppxlib)
<camlp5/Camlp5Helpers.*>: use_GTCommon
<camlp5/pa_gt.cm*>: package(ppxlib,base)
#<camlp5/pa_gt.cma>: linkall
<camlp5/pp5gt.cma>: linkpkg, link_pp5gt
#package(ppxlib), linkall, use_GTCommon, link_pagtcmo

#<src/GT.ml4>: use_m4
<src/GT.ml>:  use_pa_gt, use_m4

#<plugins/*.ml>: link_pa_gt
#<plugins/*.cmo>: pp(camlp5o), package(camlp5)

#<ppx/*>: package(ppx_core,ppx_type_conv,ppx_metaquot)
<ppx/*>: package(ppxlib)
<ppx/PpxHelpers.*>: package(ppxlib.metaquot)
<ppx/ppx_deriving_gt.cm*>: linkall

<ppx/pp_gt.cm*>: package(ppxlib.runner)
<ppx/pp_gt.native>: use_GTCommon, make_pp_gt

###########################################
# Regression tests

<regression/test081*>: rectypes
<regression/test0*.*>: use_pa_gt
<regression/test*.cm*>: use_gt
<regression/test*.cmi>: use_gt
<regression/test*.native>: use_gt
#<regression/test0*.*>: pp(camlp5o)
<regression/test7*.*>: ppx(ocamlfind ppx_deriving/ppx_deriving --as-ppx -deriving-plugin ppx/ppx_deriving_gt.cma)

<regression/orig/*>: traverse


#<regression_ppx/test*.*>: use_gt, ppx(rewriter/pp_gt.native --as-ppx)
#<regression_ppx/test*>: rectypes, use_ppx_extension
