version = "0.3"
description = "Generic transformers for algebraic types"
requires = "GT.HTML"
archive(byte) = "GT.cma"
archive(native) = "GT.cmxa"
plugin(byte) = "GT.cma"
plugin(native) = "GT.cmxs"
package "HTML" (
  directory = "HTML"
  version = "0.3"
  description = ""
  requires = "GT.View"
  archive(byte) = "HTML.cma"
  archive(native) = "HTML.cmxa"
  plugin(byte) = "HTML.cma"
  plugin(native) = "HTML.cmxs"
)
package "View" (
  directory = "View"
  version = "0.3"
  description = ""
  requires = ""
  archive(byte) = "View.cma"
  archive(native) = "View.cmxa"
  plugin(byte) = "View.cma"
  plugin(native) = "View.cmxs"
)
package "common" (
  directory = "common"
  version = "0.3"
  description =
  "Actual code that perform codegeneration. Will used for creating new plugins"
  requires = "ocamlgraph ppxlib"
  archive(byte) = "GTCommon.cma"
  archive(native) = "GTCommon.cmxa"
  plugin(byte) = "GTCommon.cma"
  plugin(native) = "GTCommon.cmxs"
)
package "ppx" (
  directory = "ppx"
  version = "0.3"
  description = "PPX syntax extensionon top of ppx_core"
  requires(ppx_driver) = "GT.common base ppxlib"
  archive(ppx_driver,byte) = "ppx.cma"
  archive(ppx_driver,native) = "ppx.cmxa"
  plugin(ppx_driver,byte) = "ppx.cma"
  plugin(ppx_driver,native) = "ppx.cmxs"
  # This line makes things transparent for people mixing preprocessors
  # and normal dependencies
  requires(-ppx_driver) = ""
  ppx(-ppx_driver,-custom_ppx) = "./ppx.exe --as-ppx"
  library_kind = "ppx_rewriter"
)
package "syntax" (
  directory = "syntax"
  version = "0.3"
  description = ""
  requires = "GT-p5"
  archive(byte) = "syntax_p5.cma"
  archive(native) = "syntax_p5.cmxa"
  plugin(byte) = "syntax_p5.cma"
  plugin(native) = "syntax_p5.cmxs"
  package "all" (
    directory = "all"
    version = "0.3"
    description = ""
    requires =
    "GT.syntax.compare
     GT.syntax.eq
     GT.syntax.eval
     GT.syntax.fmt
     GT.syntax.foldl
     GT.syntax.foldr
     GT.syntax.hash
     GT.syntax.html
     GT.syntax.map
     GT.syntax.show
     GT.syntax.stateful"

    # By some reason bunch of require directives doesn't include preprocessor directives.
    archive(syntax,preprocessor) = "syntax_all.cma"
    archive(byte) = "syntax_all.cma"
    archive(native) = "syntax_all.cmxa"
    plugin(byte) = "syntax_all.cma"
    plugin(native) = "syntax_all.cmxs"
  )
  package "compare" (
    directory = "compare"
    version = "0.3"
    description = "Plugin 'compare'"
    requires = "GT.common"
    archive(syntax,preprocessor) = "compare.cma"
    archive(byte) = "compare.cma"
    archive(native) = "compare.cmxa"
    plugin(byte) = "compare.cma"
    plugin(native) = "compare.cmxs"
  )
  package "eq" (
    directory = "eq"
    version = "0.3"
    description = "Plugin 'eq'"
    requires = "GT.common GT.syntax.compare"
    archive(syntax,preprocessor) = "eq.cma"
    archive(byte) = "eq.cma"
    archive(native) = "eq.cmxa"
    plugin(byte) = "eq.cma"
    plugin(native) = "eq.cmxs"
  )
  package "eval" (
    directory = "eval"
    version = "0.3"
    description = "Plugin 'eval'"
    requires = "GT.common GT.syntax.map"
    archive(syntax,preprocessor) = "eval.cma"
    archive(byte) = "eval.cma"
    archive(native) = "eval.cmxa"
    plugin(byte) = "eval.cma"
    plugin(native) = "eval.cmxs"
  )
  package "fmt" (
    directory = "fmt"
    version = "0.3"
    description = "Plugin 'fmt'"
    requires = "GT.common"
    archive(syntax,preprocessor) = "fmt.cma"
    archive(byte) = "fmt.cma"
    archive(native) = "fmt.cmxa"
    plugin(byte) = "fmt.cma"
    plugin(native) = "fmt.cmxs"
  )
  package "foldl" (
    directory = "foldl"
    version = "0.3"
    description = "Plugin 'foldl'"
    requires = "GT.common"
    archive(syntax,preprocessor) = "foldl.cma"
    archive(byte) = "foldl.cma"
    archive(native) = "foldl.cmxa"
    plugin(byte) = "foldl.cma"
    plugin(native) = "foldl.cmxs"
  )
  package "foldr" (
    directory = "foldr"
    version = "0.3"
    description = "Plugin 'foldr'"
    requires = "GT.common GT.syntax.foldl"
    archive(syntax,preprocessor) = "foldr.cma"
    archive(byte) = "foldr.cma"
    archive(native) = "foldr.cmxa"
    plugin(byte) = "foldr.cma"
    plugin(native) = "foldr.cmxs"
  )
  package "hash" (
    directory = "hash"
    version = "0.3"
    description = "Plugin 'hash'"
    requires = "GT.common"
    archive(syntax,preprocessor) = "hash.cma"
    archive(byte) = "hash.cma"
    archive(native) = "hash.cmxa"
    plugin(byte) = "hash.cma"
    plugin(native) = "hash.cmxs"
  )
  package "html" (
    directory = "html"
    version = "0.3"
    description = "Plugin 'html'"
    requires = "GT.common"
    archive(syntax,preprocessor) = "html.cma"
    archive(byte) = "html.cma"
    archive(native) = "html.cmxa"
    plugin(byte) = "html.cma"
    plugin(native) = "html.cmxs"
  )
  package "map" (
    directory = "map"
    version = "0.3"
    description = "Plugin 'map' a.k.a. functor's fmap"
    requires = "GT.common"
    archive(syntax,preprocessor) = "gmap.cma"
    archive(byte) = "gmap.cma"
    archive(native) = "gmap.cmxa"
    plugin(byte) = "gmap.cma"
    plugin(native) = "gmap.cmxs"
  )
  package "show" (
    directory = "show"
    version = "0.3"
    description = "Plugin 'show'"
    requires = "GT.common"
    archive(syntax,preprocessor) = "show.cma"
    archive(byte) = "show.cma"
    archive(native) = "show.cmxa"
    plugin(byte) = "show.cma"
    plugin(native) = "show.cmxs"
  )
  package "stateful" (
    directory = "stateful"
    version = "0.3"
    description = "Plugin 'stateful'"
    requires = "GT.common GT.syntax.map"
    archive(syntax,preprocessor) = "stateful.cma"
    archive(byte) = "stateful.cma"
    archive(native) = "stateful.cmxa"
    plugin(byte) = "stateful.cma"
    plugin(native) = "stateful.cmxs"
  )
)
